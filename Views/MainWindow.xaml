<mah:MetroWindow x:Class="Threads.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Threads"
        xmlns:viewmodels="clr-namespace:Threads.ViewModel"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        mc:Ignorable="d"
        Title="Downloader" Height="480" Width="640" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" TitleCharacterCasing="Normal"
                 MouseDown="Window_MouseDown">
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="CustomGridViewColumneHeader" TargetType="GridViewColumnHeader" BasedOn="{StaticResource MahApps.Styles.GridViewColumnHeader}">
            <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        </Style>
        <Style x:Key="GridViewColumnItemGrid" TargetType="Grid">
            <Setter Property="Width" Value="{Binding  RelativeSource={RelativeSource Mode=FindAncestor , AncestorType=ListViewItem, AncestorLevel=1},Path=ActualWidth}"/>
        </Style>
        <Style TargetType="MenuItem" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
            <Setter Property="Background" Value="WhiteSmoke"/>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid Margin="10 10 10 10">
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height ="auto"/>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Row="0" Grid.Column="0"
                    mah:TextBoxHelper.Watermark="Path to link..."
                    mah:TextBoxHelper.ClearTextButton="True"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Text="{Binding url}"/>

                    <mah:NumericUpDown  Grid.Row="0" Grid.Column="1"
                                        ToolTip="Number of threads"
                                        NumericInputMode="Numbers"
                                        InterceptManualEnter="False"
                                        Minimum="1"
                                        Maximum="10"
                                        Value="{Binding countThreads}">
                        <mah:NumericUpDown.Style>
                            <Style TargetType="mah:NumericUpDown">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </mah:NumericUpDown.Style>
                        <mah:NumericUpDown.Resources>
                            <Style TargetType="TextBox">
                                <EventSetter Event="PreviewGotKeyboardFocus" Handler="TextBox_PreviewGotKeyboardFocus"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </mah:NumericUpDown.Resources>
                    </mah:NumericUpDown>
                    <Button Content="Download" Grid.Column="2" Command="{Binding Download}"/>
                </Grid>
                <ListView Grid.Row="1" ItemsSource="{Binding download}">
                    <ListView.Resources>
                        <ContextMenu x:Key="ItemContextMenu">
                            <MenuItem Header="Run" Command="{Binding DataContext.Run, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Pause" Command="{Binding DataContext.Pause, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Stop" Command="{Binding DataContext.Stop, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Remove" Command="{Binding DataContext.Remove, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Open Folder" Command="{Binding DataContext.OpenFolder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Move" Command="{Binding DataContext.Move, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                            <MenuItem Header="Delete" Command="{Binding DataContext.Delete, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}"/>
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View >
                        <GridView>
                            <GridView.Columns>
                                <GridViewColumn  Width="200">Name
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource CustomGridViewColumneHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBox Text="{Binding filesInfos.name}" Width="auto" TextAlignment="Left">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxmvvm:EventToCommand Event="LostKeyboardFocus"  CommandParameter ="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}" Command="{Binding DataContext.ChangeName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                                                    <dxmvvm:EventToCommand EventName="PreviewGotKeyboardFocus" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}" Command="{Binding DataContext.PreviewKeyBoardFocus, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                                                </dxmvvm:Interaction.Behaviors>
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox" >
                                                        <Setter Property="IsReadOnly" Value="True"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <EventSetter Event="MouseDoubleClick" Handler="TextBox_MouseDoubleClick"/>
                                                        <EventSetter Event="KeyDown" Handler="TextBox_KeyDown"/>
                                                        <Style.Triggers>

                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Arrow"/>
                                                            </Trigger>
                                                            <Trigger Property="IsReadOnly" Value="False">
                                                                <Setter Property="Cursor" Value="IBeam"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn DisplayMemberBinding="{Binding filesInfos.path}" Width="200">Path
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource CustomGridViewColumneHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                </GridViewColumn>

                                <GridViewColumn Width="50">Size
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource CustomGridViewColumneHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Style="{StaticResource GridViewColumnItemGrid}" HorizontalAlignment="Right">
                                                <TextBlock Text="{Binding filesInfos.size}" TextAlignment="Right"/>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="120">Status
                                    <GridViewColumn.HeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource CustomGridViewColumneHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </GridViewColumn.HeaderContainerStyle>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Style="{StaticResource GridViewColumnItemGrid}" HorizontalAlignment="Center" >
                                                <mah:MetroProgressBar Foreground="{Binding colorProgressbar, UpdateSourceTrigger=PropertyChanged}"
                                                                      Background="WhiteSmoke"
                                                                      Width="100"
                                                                      Value="{Binding progression, UpdateSourceTrigger=PropertyChanged}"
                                                                      HorizontalAlignment="Stretch">
                                                </mah:MetroProgressBar>
                                                <TextBlock Name="Status" Foreground="{Binding colorTextProgressBar}" TextAlignment="Center" Text="{Binding status}" />
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                </ListView>

            </Grid>
            <Grid>
            </Grid>
        </Grid>
    </Grid>
</mah:MetroWindow>
